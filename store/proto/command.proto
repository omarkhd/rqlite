syntax = "proto3";
package command;

option go_package = "github.com/rqlite/rqlite/store/proto";

message Parameter {
	oneof value {
		sint64 i = 1;
		double d = 2;
		bool b = 3;
		bytes y = 4;
		string s = 5;
	}
}

// These should be built in mind with a future grpc interface. HTTP is a thin layer then on system built with Protbuf at the core of the system.
message Statement {
	string sql = 1;
	repeated Parameter parameters = 2;
}

message Request {
	bool timings = 2;
	bool transaction = 3;
	repeated Statement statements = 4;
}

message ExecuteRequest {
	Request request
}

message QueryRequest {
	Request request
}

message DatabaseCommand {
        enum Type {
                UNKNOWN = 0;
                QUERY = 1;
                EXECUTE = 2;
        }
        Type type = 1;
	Request request
	oneof {  //? Use this? Can then use has_excecute()? etc
		ExecuteRequest execute
		QueryRequest query
	}	
	bytes compressed_statements = 5;
}

message MetadataSetCommand {
	string raft_id = 1;
	map<string, string> data = 2;
}

message MetadataDeleteCommand {
	string raft_id = 1;
}
